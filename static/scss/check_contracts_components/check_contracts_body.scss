.main_container {
  display: flex;
  gap: 7vw;
  background-color: $color-main-background;
}

.table {
  border-radius: 3rem;
  border-spacing: 0 50px;
  width: 70%;
  max-height: 1rem;
  background-color: #FEFAF6;
  margin: 3vw 2vw 2vw 19vw ;
  padding: 2vw;
  box-shadow: 0 4px 6px 3px rgba(0, 0, 0, 0.2);

  & thead tr > th {
    text-transform: uppercase;
    text-align: center;
    font-size: $font-size-medium;
  }

  & caption {
    font-size: $font-size-big;
    padding-bottom: 2rem;
  }

   tbody > tr {
    font-size: $font-size-medium;
    text-align: center;
    background-size: 200% 100%;
    max-width: 100%;
    height: 10vh;
    &:hover {
      animation: SmoothColorChange .5s forwards;
    }
    &:nth-child(odd):not(:last-child) {
      background-color: $color-white;
    }
    &:nth-child(odd):not(:last-child) {
      background-image: linear-gradient(to right, $color-white, darken($color-white, 10%));
    }
    &:nth-child(even):not(:last-child) {
      background-image: linear-gradient(to right, $color-table-background, darken($color-table-background, 10%)); // Gradient adjustment
  }
  }

  &__header {
    display: flex;
    justify-content: space-evenly;
    align-items: center;

    &__search {
       form {
        display: flex;
         align-content: center;
        gap: 1.5rem;
      }
      &__label {
        width: 15em;
        height: 2em;
        border-radius: 1.2rem;
        align-self: end;
        transition: scale .2s ease-in-out;
        &::placeholder {
          padding-left: $margin-small;
        }
      }
      &__button {
        align-self: end;
        width: 7em;
        border-radius: 1.2rem;
        background-color: $color-table-background;
        cursor: pointer;
        border-color: rgba(0, 0, 0, 0.3);
        margin-top: $margin-small;
        font-size: $font-size-big;
        transition: background-color .5s ease-in-out, transform .3s ease-in-out, box-shadow .3s ease-in-out;
        box-shadow: 0 4px 6px 3px rgba(0, 0, 0, 0.2);

        &:hover {
          background-color: darken($color-table-background, 10%);
        }

        &:active {
        transform: scale(0.95);
        box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1);
      }
      }
    }
  }
}
.focused {
  scale: (1.1);
}

.check {
  text-decoration: none;
  color: $color-button-check;
  transition: color .2s ease-in-out;

  &:hover {
    color: $color-light-blue;
  }
}

.check_option {
  cursor: pointer;
  scale: 0.9;
  transition: scale .2s linear;

  &:hover {
    scale: 1.1;
  }
}

.next, .prev {
  font-size: $font-size-medium;
  width: 7em;
  border-radius: 1.2rem;
  background-color: $color-table-background;
  cursor: pointer;
  border-color: rgba(0, 0, 0, 0.3);
  transition: background-color .5s ease-in-out, transform .3s ease-in-out, box-shadow .3s ease-in-out;
  box-shadow: 0 4px 6px 3px rgba(0, 0, 0, 0.2);

  &:hover {
        background-color: darken($color-table-background, 10%);
      }

  &:active {
    transform: scale(0.95);
    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1);
  }
}

#page_number {
  font-size: $font-size-big;
}


.filter-button {
  align-self: end;
  width: 7em;
  border-radius: 1.2rem;
  background-color: $color-table-background;
  cursor: pointer;
  border-color: $color-white;
  margin-top: $margin-small;
  font-size: $font-size-big;
  box-shadow: 0 4px 6px 3px rgba(0, 0, 0, 0.2);
  transition: background-color .5s ease-in-out, transform .3s ease-in-out, box-shadow .3s ease-in-out;
}

.order-button {
  width: 7em;
  cursor: pointer;
  border-radius: 1.2rem;
  border-color: $color-white;
  margin-top: $margin-small;
  font-size: $font-size-big;
  box-shadow: 0 4px 6px 3px rgba(0, 0, 0, 0.2);
  background-color: $color-table-background;

  legend {
    text-align: center;
  }
}

.order {
  display: flex;
  flex-direction: column;
  font-size: $font-size-small;
}

#label-filter {
  display: none;
}

.filter-button,
.order-button {
  transition: background-color .5s ease-in-out;

  &:hover {
    background-color: darken($color-table-background, 10%);
  }
}

.error {
  padding-left: 1rem;
  transform: translateX(25%);
  position: absolute;
  z-index: 5000;
  width: 70%;
  height: 5em;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: white;
  border-radius: 10px;
  opacity: 1;
  gap: 1rem;
  animation: FadeInOut 7s ease-in-out forwards;

  & > svg {
    fill: green;
    width: 5em;

  }

  &__text {
    font-size: $font-size-small;
    color: $color-black;
  }

  &__description > strong {
    font-size: $font-size-big;
    font-weight: $roboto-font-weight-bold;
  }
}

.delete {
  cursor: pointer;
  width: 20px;
  height: 20px;
}

.confirmation_dialog {
  display: flex;
  flex-direction: column;
  gap: 5rem;
  border-radius: 3rem;
  border-spacing: 0 50px;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-40%, -60%); /* Start scaled down */
  border: 1px solid #ccc;
  padding: 20px;
  background-color: $color-table-background;
  z-index: 2000; /* Ensures the dialog appears above other content */
}

.backdrop {
   position: fixed;
   width: 100%;
   height: 100%;
   top: 0;
   left: 0;
   background-color: rgba(0,0,0,0.5); /* Dark semi-transparent background */
   z-index: 1000; /* Ensure it is below the dialog */
}

.popup_buttons {
  display: flex;
  justify-content: space-between;
}

.yes,
.no {
  font-size: $font-size-medium;
  width: 7em;
  border-radius: 1.2rem;
  background-color: $color-table-background;
  cursor: pointer;
  border-color: rgba(0, 0, 0, 0.3);
  transition: background-color .5s ease-in-out, transform .3s ease-in-out, box-shadow .3s ease-in-out;
  box-shadow: 0 4px 6px 3px rgba(0, 0, 0, 0.2);

  &:active {
    transform: scale(0.95);
    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1);
  }

  &:hover {
      background-color: darken($color-table-background, 10%);
  }
}

.yes {
  background-color: $color-green;
  color: $color-white;

  &:hover {
    background-color: $color-dark-green;
  }
}

.no {
  background-color: $color-red;
  color: $color-white;

   &:hover {
    background-color: $color-dark-red;
  }
}

.delete {
  & > path {
    transition: stroke .2s ease-in;
    stroke: $color-dark-red
  }

  &:hover {
    & > path {
      stroke: $color-red;
    }
  }
}